<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>
    <bean id="contentService" parent="baseContentService">
        <property name="store">
            <!-- cached s3 contentStore -->
            <ref bean="cachingContentStore"/>

            <!-- localContentStore replicated to the cached s3 contentStore
            <ref bean="replicatedContentStore"/>
             -->
        </property>
    </bean>

    <bean id="cachingContentStore" class="org.alfresco.repo.content.caching.CachingContentStore" init-method="init">
        <property name="backingStore" ref="s3ContentStore"/>
        <property name="cache" ref="contentCache"/>
        <property name="cacheOnInbound" value="${system.content.caching.cacheOnInbound}"/>
        <property name="quota" ref="standardQuotaManager"/>
    </bean>

    <bean id="s3ContentStore" class="org.alfresco.repo.content.cloudstore.S3ContentStore">
        <constructor-arg>
            <value>${s3.accesskey}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${s3.secretkey}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${s3.bucketname}</value>
        </constructor-arg>
    </bean>

    <bean id="contentCache" class="org.alfresco.repo.content.caching.ContentCacheImpl">
        <property name="memoryStore" ref="cachingContentStoreCache"/>
        <property name="cacheRoot" value="${dir.cachedcontent}"/>
    </bean>

    <bean
            id="standardQuotaManager"
            class="org.alfresco.repo.content.caching.quota.StandardQuotaStrategy"
            init-method="init"
            destroy-method="shutdown">
        <!--  maxUsageMB: the maximum disk usage that should be used for cached content files -->
        <property name="maxUsageMB" value="${system.content.caching.maxUsageMB}"/>

        <!-- maxFileSizeMB: files larger than this size will not be kept in the cache -->
        <property name="maxFileSizeMB" value="${system.content.caching.maxFileSizeMB}"/>

        <property name="panicThresholdPct" value="${system.content.caching.panicThresholdPct}"/>
        <property name="cleanThresholdPct" value="${system.content.caching.cleanThresholdPct}"/>
        <property name="targetUsagePct" value="${system.content.caching.targetUsagePct}"/>
        <property name="normalCleanThresholdSec" value="${system.content.caching.normalCleanThresholdSec}"/>

        <property name="cache" ref="contentCache"/>
        <property name="cleaner" ref="cachedContentCleaner"/>
    </bean>

    <bean id="unlimitedQuotaManager" class="org.alfresco.repo.content.caching.quota.UnlimitedQuotaStrategy"/>

    <!-- Cache factory creates instances of SimpleCache and is defined in cache-context.xml -->
    <bean id="cachingContentStoreCache" factory-bean="cacheFactory" factory-method="createCache">
        <constructor-arg value="cache.cachingContentStoreCache"/>
    </bean>

    <bean id="cachingContentStoreCleanerJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass">
            <value>org.alfresco.repo.content.caching.cleanup.CachedContentCleanupJob</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="cachedContentCleaner">
                    <ref bean="cachedContentCleaner"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="cachedContentCleaner"
          class="org.alfresco.repo.content.caching.cleanup.CachedContentCleaner"
          init-method="init">
        <property name="minFileAgeMillis" value="${system.content.caching.minFileAgeMillis}"/>
        <property name="maxDeleteWatchCount" value="${system.content.caching.maxDeleteWatchCount}"/>
        <property name="cache" ref="contentCache"/>
        <property name="usageTracker" ref="standardQuotaManager"/>
    </bean>

    <bean id="cachingContentStoreCleanerTrigger" class="org.alfresco.util.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="cachingContentStoreCleanerJobDetail"/>
        </property>
        <property name="scheduler">
            <ref bean="schedulerFactory"/>
        </property>
        <property name="cronExpression">
            <value>${system.content.caching.contentCleanup.cronExpression}</value>
        </property>
        <property name="startDelayMinutes">
            <value>${system.cronJob.startDelayMinutes}</value>
        </property>
    </bean>

    <bean id="localDriveContentStore" class="org.alfresco.repo.content.filestore.FileContentStore">
        <constructor-arg>
            <value>${dir.root}/contentstore</value>
        </constructor-arg>
    </bean>

    <bean id="replicatedContentStore" class="org.alfresco.repo.content.replication.ReplicatingContentStore" >
        <property name="primaryStore">
            <ref bean="localDriveContentStore" />
        </property>
        <property name="secondaryStores">
            <list>
                <ref bean="cachingContentStore" />
            </list>
        </property>
        <property name="outbound">
            <value>true</value>
        </property>
        <property name="retryingTransactionHelper">
            <ref bean="retryingTransactionHelper"/>
        </property>
    </bean>
</beans>